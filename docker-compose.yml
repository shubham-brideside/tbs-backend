version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: brideside-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-Shubham@123}
      MYSQL_DATABASE: ${DB_DATABASE:-reevah}
      MYSQL_USER: ${DB_USER:-brideside}
      MYSQL_PASSWORD: ${DB_PASSWORD:-Shubham@123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - brideside-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Brideside Backend Application
  brideside-backend:
    build: .
    container_name: brideside-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: mysql:3306
      DB_DATABASE: ${DB_DATABASE:-reevah}
      DB_USER: ${DB_USER:-brideside}
      DB_PASSWORD: ${DB_PASSWORD:-Shubham@123}
      DB_SSL: true
      DB_POOL_SIZE: 20
      LOG_LEVEL_ROOT: WARN
      LOG_LEVEL_APP: INFO
      LOG_FILE_PATH: /var/log/brideside-backend/application.log
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      TZ: Asia/Kolkata
      JAVA_OPTS: "-Duser.timezone=Asia/Kolkata"
    ports:
      - "8080:8080"
    volumes:
      - app_logs:/var/log/brideside-backend
    networks:
      - brideside-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: brideside-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - brideside-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: brideside-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - brideside-network
    restart: unless-stopped

volumes:
  mysql_data:
  app_logs:
  prometheus_data:
  grafana_data:

networks:
  brideside-network:
    driver: bridge
